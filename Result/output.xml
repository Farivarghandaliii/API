<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.1 on win32)" generated="20220219 12:38:32.150" rpa="false" schemaversion="2">
<suite id="s1" name="S4" source="E:\API\Testcase\S4.robot">
<test id="s1-t1" name="TC_Post_Request">
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${API_Base}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220219 12:38:32.801" level="INFO">Creating Session using : alias=AddData, url=https://reqres.in/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220219 12:38:32.800" endtime="20220219 12:38:32.801"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>name=morpheus</arg>
<arg>job=leader</arg>
<arg>email=morpheus@gmail.com</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220219 12:38:32.801" level="INFO">${body} = {'name': 'morpheus', 'job': 'leader', 'email': 'morpheus@gmail.com'}</msg>
<status status="PASS" starttime="20220219 12:38:32.801" endtime="20220219 12:38:32.801"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220219 12:38:32.802" level="INFO">${header} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20220219 12:38:32.802" endtime="20220219 12:38:32.802"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>AddData</arg>
<arg>${API_Base}api/users</arg>
<arg>data=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220219 12:38:33.439" level="INFO">POST Request : url=https://reqres.in/api/users 
 path_url=/api/users 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=name=morpheus&amp;job=leader&amp;email=morpheus%40gmail.com 
 </msg>
<msg timestamp="20220219 12:38:33.441" level="INFO">POST Response : url=https://reqres.in/api/users 
 status=201, reason=Created 
 headers={'Date': 'Sat, 19 Feb 2022 09:09:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '113', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"71-ICLTaVWBOM9FcocEWUygpk3H1BE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=7su6cScTMVJRVjBd2WtAROO5oqRfzzjLyoMmvgwRPi%2FtoVgg97%2B2PnStn6eK9oaJDg9hvaDioTZPVROop3g1sGvmnB6mqeCtO%2F9tvS3YoTaGSps53L75PknVIcQ%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '6dfe5b3329b491de-FRA', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body={"name":"morpheus","job":"leader","email":"morpheus@gmail.com","id":"618","createdAt":"2022-02-19T09:09:25.678Z"} 
 </msg>
<msg timestamp="20220219 12:38:33.442" level="INFO">${Response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220219 12:38:32.802" endtime="20220219 12:38:33.442"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220219 12:38:33.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220219 12:38:33.443" endtime="20220219 12:38:33.447"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${NameValue}</var>
<arg>${response.json()}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220219 12:38:33.495" level="INFO">${NameValue} = ['morpheus']</msg>
<status status="PASS" starttime="20220219 12:38:33.448" endtime="20220219 12:38:33.495"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name_update}</var>
<arg>david</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220219 12:38:33.496" level="INFO">${name_update} = david</msg>
<status status="PASS" starttime="20220219 12:38:33.496" endtime="20220219 12:38:33.496"/>
</kw>
<kw name="Update Value To Json" library="JSONLibrary">
<var>${response.json()}</var>
<arg>${response.json()}</arg>
<arg>$.name</arg>
<arg>${name_update}</arg>
<doc>Update value to JSON using JSONPath</doc>
<msg timestamp="20220219 12:38:33.546" level="INFO">${response.json()} = {'name': 'david', 'job': 'leader', 'email': 'morpheus@gmail.com', 'id': '618', 'createdAt': '2022-02-19T09:09:25.678Z'}</msg>
<status status="PASS" starttime="20220219 12:38:33.496" endtime="20220219 12:38:33.547"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${emailValue}</var>
<arg>${response.json()}</arg>
<arg>$.email</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220219 12:38:33.563" level="INFO">${emailValue} = ['morpheus@gmail.com']</msg>
<status status="PASS" starttime="20220219 12:38:33.547" endtime="20220219 12:38:33.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${email_update}</var>
<arg>david@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220219 12:38:33.563" level="INFO">${email_update} = david@gmail.com</msg>
<status status="PASS" starttime="20220219 12:38:33.563" endtime="20220219 12:38:33.563"/>
</kw>
<kw name="Update Value To Json" library="JSONLibrary">
<var>${response.json()}</var>
<arg>${response.json()}</arg>
<arg>$.email</arg>
<arg>${email_update}</arg>
<doc>Update value to JSON using JSONPath</doc>
<msg timestamp="20220219 12:38:33.627" level="INFO">${response.json()} = {'name': 'david', 'job': 'leader', 'email': 'david@gmail.com', 'id': '618', 'createdAt': '2022-02-19T09:09:25.678Z'}</msg>
<status status="PASS" starttime="20220219 12:38:33.564" endtime="20220219 12:38:33.627"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${response.json()}[id]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220219 12:38:33.628" level="INFO">Length is 3</msg>
<msg timestamp="20220219 12:38:33.628" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220219 12:38:33.627" endtime="20220219 12:38:33.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>3</arg>
<arg>${length}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220219 12:38:33.628" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20220219 12:38:33.628" endtime="20220219 12:38:33.628"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220219 12:38:33.628" endtime="20220219 12:38:33.629"/>
</kw>
<kw name="Change Date To Jalali" library="Times">
<var>${jalali}</var>
<arg>date=${response.json()}[createdAt]</arg>
<msg timestamp="20220219 12:38:33.631" level="INFO">${jalali} = 1400-11-30T09:09:25.678000Z</msg>
<status status="PASS" starttime="20220219 12:38:33.630" endtime="20220219 12:38:33.632"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>output:${SPACE}${SPACE}${jalali}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220219 12:38:33.633" endtime="20220219 12:38:33.635"/>
</kw>
<status status="PASS" starttime="20220219 12:38:32.800" endtime="20220219 12:38:33.636"/>
</test>
<status status="PASS" starttime="20220219 12:38:32.153" endtime="20220219 12:38:33.637"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="S4">S4</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
